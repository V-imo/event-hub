# ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".

name: ci-cd
on:
  pull_request: {}
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm ci
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION || 'eu-central-1' }}
      - name: Generate random stage ID
        id: stage
        run: echo "STAGE_ID=test-$(shuf -i 10000-99999 -n 1)" >> $GITHUB_OUTPUT
      - name: Deploy Test Stack
        env:
          CDK_DEPLOY_ACCOUNT: ${{ secrets.AWS_TEST_ACCOUNT }}
          CDK_DEPLOY_REGION: ${{ secrets.AWS_REGION || 'eu-central-1' }}
        run: npm run deploy -- -c stage=${{ steps.stage.outputs.STAGE_ID }} --require-approval never
      - name: Run E2E Tests
        env:
          STAGE: ${{ steps.stage.outputs.STAGE_ID }}
        run: npm run test:e2e
      - name: Destroy Test Stack
        if: always()
        env:
          CDK_DEPLOY_ACCOUNT: ${{ secrets.AWS_TEST_ACCOUNT }}
          CDK_DEPLOY_REGION: ${{ secrets.AWS_REGION || 'eu-central-1' }}
        run: npm run destroy -- -c stage=${{ steps.stage.outputs.STAGE_ID }} --force
  deploy_dev:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm ci
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION || 'eu-central-1' }}
      - name: Deploy Dev
        env:
          CDK_DEPLOY_ACCOUNT: ${{ secrets.AWS_DEV_ACCOUNT }}
          CDK_DEPLOY_REGION: ${{ secrets.AWS_REGION || 'eu-central-1' }}
        run: npm run deploy -- -c stage=dev --require-approval never
  deploy_prod:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm ci
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION || 'eu-central-1' }}
      - name: Deploy Prod
        env:
          CDK_DEPLOY_ACCOUNT: ${{ secrets.AWS_PROD_ACCOUNT }}
          CDK_DEPLOY_REGION: ${{ secrets.AWS_REGION || 'eu-central-1' }}
        run: npm run deploy -- -c stage=prod --require-approval never
